{"ast":null,"code":"var _jsxFileName = \"/Users/alexandredemoura/Desktop/dev/ai-chat-app/client/src/components/SettingsPopup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useContext } from 'react';\nimport { ReactComponent as CloseIcon } from '../img/close.svg';\nimport { ThemeContext } from '../context/ThemeContext';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\n// Define an enum for supported languages\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SupportedLanguage = /*#__PURE__*/function (SupportedLanguage) {\n  SupportedLanguage[\"EN\"] = \"en\";\n  SupportedLanguage[\"FR\"] = \"fr\";\n  return SupportedLanguage;\n}(SupportedLanguage || {});\nconst SettingsPopup = ({\n  onClose\n}) => {\n  _s();\n  const popupRef = useRef(null);\n  const {\n    theme,\n    toggleTheme\n  } = useContext(ThemeContext);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (popupRef.current && !popupRef.current.contains(event.target)) {\n        onClose();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [onClose]);\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng).catch(error => {\n      console.error('Failed to change language:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: popupRef,\n      className: classNames(\"rounded-md shadow-xl border p-6 w-96 max-w-full relative\", {\n        \"bg-white border-gray-200\": theme !== 'dark',\n        \"bg-gray-800 border-gray-700\": theme === 'dark'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: classNames(\"absolute top-2 right-2 transition-colors\", {\n          \"text-gray-500 hover:text-gray-700\": theme !== 'dark',\n          \"text-gray-400 hover:text-gray-200\": theme === 'dark'\n        }),\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          className: theme === 'dark' ? 'fill-white' : 'fill-black'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classNames(\"text-2xl font-semibold mb-4\", {\n          \"text-white\": theme === 'dark'\n        }),\n        children: t('settings.title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classNames(\"mr-2\", {\n            \"text-white\": theme === 'dark'\n          }),\n          children: [t('settings.theme'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleTheme(theme === 'light' ? 'dark' : 'light'),\n          className: classNames(\"px-2 py-1 rounded-md\", {\n            \"bg-gray-200 text-gray-800\": theme === 'light',\n            \"bg-gray-600 text-white\": theme === 'dark'\n          }),\n          children: theme === 'light' ? 'Light' : 'Dark'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classNames(\"mr-2\", {\n            \"text-white\": theme === 'dark'\n          }),\n          children: [t('settings.language'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: i18n.language,\n          onChange: e => changeLanguage(e.target.value),\n          className: classNames(\"px-2 py-1 rounded-md\", {\n            \"bg-gray-200 text-gray-800\": theme === 'light',\n            \"bg-gray-600 text-white\": theme === 'dark'\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: SupportedLanguage.EN,\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: SupportedLanguage.FR,\n            children: \"Fran\\xE7ais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsPopup, \"SutNTYX3PbA7Qtw8tfgUsz75kq0=\", false, function () {\n  return [useTranslation];\n});\n_c = SettingsPopup;\nexport default SettingsPopup;\nvar _c;\n$RefreshReg$(_c, \"SettingsPopup\");","map":{"version":3,"names":["React","useRef","useEffect","useContext","ReactComponent","CloseIcon","ThemeContext","classNames","useTranslation","jsxDEV","_jsxDEV","SupportedLanguage","SettingsPopup","onClose","_s","popupRef","theme","toggleTheme","t","i18n","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","changeLanguage","lng","catch","error","console","className","children","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","language","onChange","e","EN","FR","_c","$RefreshReg$"],"sources":["/Users/alexandredemoura/Desktop/dev/ai-chat-app/client/src/components/SettingsPopup.tsx"],"sourcesContent":["import React, { useRef, useEffect, useContext } from 'react';\nimport { ReactComponent as CloseIcon } from '../img/close.svg';\nimport { ThemeContext } from '../context/ThemeContext';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\n// Define an enum for supported languages\nenum SupportedLanguage {\n  EN = 'en',\n  FR = 'fr',\n}\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst SettingsPopup: React.FC<Props> = ({ onClose }) => {\n  const popupRef = useRef<HTMLDivElement>(null);\n  const { theme, toggleTheme } = useContext(ThemeContext);\n  const { t, i18n } = useTranslation();\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (popupRef.current && !popupRef.current.contains(event.target as Node)) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [onClose]);\n\n  const changeLanguage = (lng: SupportedLanguage) => {\n    i18n.changeLanguage(lng).catch((error) => {\n      console.error('Failed to change language:', error);\n    });\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div\n        ref={popupRef}\n        className={classNames(\n          \"rounded-md shadow-xl border p-6 w-96 max-w-full relative\",\n          {\n            \"bg-white border-gray-200\": theme !== 'dark',\n            \"bg-gray-800 border-gray-700\": theme === 'dark'\n          }\n        )}\n      >\n        <button\n          onClick={onClose}\n          className={classNames(\n            \"absolute top-2 right-2 transition-colors\",\n            {\n              \"text-gray-500 hover:text-gray-700\": theme !== 'dark',\n              \"text-gray-400 hover:text-gray-200\": theme === 'dark'\n            }\n          )}\n          aria-label=\"Close\"\n        >\n          <CloseIcon className={theme === 'dark' ? 'fill-white' : 'fill-black'} />\n        </button>\n        <h2 className={classNames(\n          \"text-2xl font-semibold mb-4\",\n          { \"text-white\": theme === 'dark' }\n        )}>{t('settings.title')}</h2>\n        <div className=\"flex items-center mb-4\">\n          <span className={classNames(\n            \"mr-2\",\n            { \"text-white\": theme === 'dark' }\n          )}>{t('settings.theme')}:</span>\n          <button\n            onClick={() => toggleTheme(theme === 'light' ? 'dark' : 'light')}\n            className={classNames(\n              \"px-2 py-1 rounded-md\",\n              {\n                \"bg-gray-200 text-gray-800\": theme === 'light',\n                \"bg-gray-600 text-white\": theme === 'dark'\n              }\n            )}\n          >\n            {theme === 'light' ? 'Light' : 'Dark'}\n          </button>\n        </div>\n        <div className=\"flex items-center\">\n          <span className={classNames(\n            \"mr-2\",\n            { \"text-white\": theme === 'dark' }\n          )}>{t('settings.language')}:</span>\n          <select\n            value={i18n.language as SupportedLanguage}\n            onChange={(e) => changeLanguage(e.target.value as SupportedLanguage)}\n            className={classNames(\n              \"px-2 py-1 rounded-md\",\n              {\n                \"bg-gray-200 text-gray-800\": theme === 'light',\n                \"bg-gray-600 text-white\": theme === 'dark'\n              }\n            )}\n          >\n            <option value={SupportedLanguage.EN}>English</option>\n            <option value={SupportedLanguage.FR}>Français</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsPopup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}