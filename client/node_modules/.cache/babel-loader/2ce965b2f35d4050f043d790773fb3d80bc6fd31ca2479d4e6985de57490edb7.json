{"ast":null,"code":"var _jsxFileName = \"/Users/alexandredemoura/Desktop/dev/ai-chat-app/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Home from './screens/Home';\nimport CurrentConversation from './screens/CurrentConversations';\nimport MessageInput from './components/MessageInput';\nimport { ThemeContext } from './context/ThemeContext';\nimport { AuthProvider } from './AuthContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const [conversations, setConversations] = useState([]);\n  const [currentConversation, setCurrentConversation] = useState(null);\n  const [showHome, setShowHome] = useState(true);\n  useEffect(() => {\n    fetchConversations();\n  }, []);\n  const fetchConversations = async () => {\n    try {\n      const response = await axios.get('/api/conversations');\n      setConversations(response.data);\n    } catch (error) {\n      console.error('Error fetching conversations:', error);\n    }\n  };\n  const handleSubmit = async input => {\n    if (input.trim()) {\n      const newMessage = {\n        text: input,\n        isUser: true\n      };\n      const currentTime = new Date();\n      if (currentConversation) {\n        try {\n          const response = await axios.put(`/api/conversations/${currentConversation}`, {\n            messages: [...conversations.find(conv => conv.id === currentConversation).messages, newMessage],\n            lastUpdated: currentTime\n          });\n          setConversations(prevConversations => prevConversations.map(conv => conv.id === currentConversation ? response.data : conv));\n        } catch (error) {\n          console.error('Error updating conversation:', error);\n        }\n        simulateAIResponse(currentConversation);\n      } else {\n        try {\n          const response = await axios.post('/api/conversations', {\n            title: input.slice(0, 30),\n            messages: [newMessage],\n            lastUpdated: currentTime\n          });\n          setConversations(prev => [...prev, response.data]);\n          setCurrentConversation(response.data.id);\n          simulateAIResponse(response.data.id);\n        } catch (error) {\n          console.error('Error creating conversation:', error);\n        }\n      }\n      setShowHome(false);\n    }\n  };\n  const simulateAIResponse = async convId => {\n    setTimeout(async () => {\n      const aiResponse = {\n        text: \"This is a simulated AI response.\",\n        isUser: false\n      };\n      const currentTime = new Date();\n      try {\n        const response = await axios.put(`/api/conversations/${convId}`, {\n          messages: [...conversations.find(conv => conv.id === convId).messages, aiResponse],\n          lastUpdated: currentTime\n        });\n        setConversations(prevConversations => prevConversations.map(conv => conv.id === convId ? response.data : conv));\n      } catch (error) {\n        console.error('Error updating conversation with AI response:', error);\n      }\n    }, 1000);\n  };\n  const startNewChat = () => {\n    setCurrentConversation(null);\n    setShowHome(true);\n  };\n  const selectConversation = id => {\n    setCurrentConversation(id);\n    setShowHome(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex h-screen overflow-hidden ${theme === 'dark' ? 'bg-gray-900' : 'bg-white'}`,\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        conversations: conversations,\n        currentConversation: currentConversation,\n        startNewChat: startNewChat,\n        selectConversation: selectConversation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col\",\n        children: [showHome ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(CurrentConversation, {\n          conversation: conversations.find(conv => conv.id === currentConversation)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QjlY6WmhbOKwdRvM3FxbUn7kVEc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Sidebar","Home","CurrentConversation","MessageInput","ThemeContext","AuthProvider","axios","jsxDEV","_jsxDEV","App","_s","theme","conversations","setConversations","currentConversation","setCurrentConversation","showHome","setShowHome","fetchConversations","response","get","data","error","console","handleSubmit","input","trim","newMessage","text","isUser","currentTime","Date","put","messages","find","conv","id","lastUpdated","prevConversations","map","simulateAIResponse","post","title","slice","prev","convId","setTimeout","aiResponse","startNewChat","selectConversation","children","className","fileName","_jsxFileName","lineNumber","columnNumber","conversation","onSubmit","_c","$RefreshReg$"],"sources":["/Users/alexandredemoura/Desktop/dev/ai-chat-app/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Conversation, Message as MessageType } from './types/types';\nimport Sidebar from './components/Sidebar';\nimport Home from './screens/Home';\nimport CurrentConversation from './screens/CurrentConversations';\nimport MessageInput from './components/MessageInput';\nimport { ThemeContext } from './context/ThemeContext';\nimport { AuthProvider } from './AuthContext';\nimport axios from 'axios';\n\nconst App: React.FC = () => {\n  const { theme } = useContext(ThemeContext);\n  const [conversations, setConversations] = useState<Conversation[]>([]);\n  const [currentConversation, setCurrentConversation] = useState<string | null>(null);\n  const [showHome, setShowHome] = useState(true);\n\n  useEffect(() => {\n    fetchConversations();\n  }, []);\n\n  const fetchConversations = async () => {\n    try {\n      const response = await axios.get('/api/conversations');\n      setConversations(response.data);\n    } catch (error) {\n      console.error('Error fetching conversations:', error);\n    }\n  };\n\n  const handleSubmit = async (input: string) => {\n    if (input.trim()) {\n      const newMessage: MessageType = { text: input, isUser: true };\n      const currentTime = new Date();\n      if (currentConversation) {\n        try {\n          const response = await axios.put(`/api/conversations/${currentConversation}`, {\n            messages: [...conversations.find(conv => conv.id === currentConversation)!.messages, newMessage],\n            lastUpdated: currentTime\n          });\n          setConversations(prevConversations =>\n            prevConversations.map(conv =>\n              conv.id === currentConversation\n                ? response.data\n                : conv\n            )\n          );\n        } catch (error) {\n          console.error('Error updating conversation:', error);\n        }\n        simulateAIResponse(currentConversation);\n      } else {\n        try {\n          const response = await axios.post('/api/conversations', {\n            title: input.slice(0, 30),\n            messages: [newMessage],\n            lastUpdated: currentTime\n          });\n          setConversations(prev => [...prev, response.data]);\n          setCurrentConversation(response.data.id);\n          simulateAIResponse(response.data.id);\n        } catch (error) {\n          console.error('Error creating conversation:', error);\n        }\n      }\n      setShowHome(false);\n    }\n  };\n\n  const simulateAIResponse = async (convId: string) => {\n    setTimeout(async () => {\n      const aiResponse: MessageType = { text: \"This is a simulated AI response.\", isUser: false };\n      const currentTime = new Date();\n      try {\n        const response = await axios.put(`/api/conversations/${convId}`, {\n          messages: [...conversations.find(conv => conv.id === convId)!.messages, aiResponse],\n          lastUpdated: currentTime\n        });\n        setConversations(prevConversations =>\n          prevConversations.map(conv =>\n            conv.id === convId\n              ? response.data\n              : conv\n          )\n        );\n      } catch (error) {\n        console.error('Error updating conversation with AI response:', error);\n      }\n    }, 1000);\n  };\n\n  const startNewChat = () => {\n    setCurrentConversation(null);\n    setShowHome(true);\n  };\n\n  const selectConversation = (id: string) => {\n    setCurrentConversation(id);\n    setShowHome(false);\n  };\n\n  return (\n    <AuthProvider>\n      <div className={`flex h-screen overflow-hidden ${theme === 'dark' ? 'bg-gray-900' : 'bg-white'}`}>\n        <Sidebar\n          conversations={conversations}\n          currentConversation={currentConversation}\n          startNewChat={startNewChat}\n          selectConversation={selectConversation}\n        />\n        <div className=\"flex-1 flex flex-col\">\n          {showHome\n            ? <Home />\n            : <CurrentConversation\n              conversation={conversations.find(conv => conv.id === currentConversation)}\n            />\n          }\n          <MessageInput onSubmit={handleSubmit} />\n        </div>\n      </div>\n    </AuthProvider>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}