{"ast":null,"code":"var _jsxFileName = \"/Users/alexandredemoura/Desktop/dev/ai-chat-app/client/src/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { auth, googleProvider } from './firebase';\nimport { signInWithPopup, signOut } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Add this new state\n  const [conversations, setConversations] = useState([]);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setUser(user);\n      setLoading(false);\n      // Clear conversations when user logs out\n      if (!user) {\n        setConversations([]);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const signIn = async () => {\n    try {\n      await signInWithPopup(auth, googleProvider);\n    } catch (error) {\n      console.error(\"Error signing in with Google\", error);\n    }\n  };\n  const logOut = async () => {\n    try {\n      await signOut(auth);\n      // Clear conversations when user logs out\n      setConversations([]);\n    } catch (error) {\n      console.error(\"Error signing out\", error);\n    }\n  };\n  const getToken = async () => {\n    if (user) {\n      return await user.getIdToken();\n    }\n    return null;\n  };\n\n  // Add this new method\n  const updateConversations = newConversations => {\n    setConversations(newConversations);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      signIn,\n      logOut,\n      getToken,\n      loading,\n      conversations,\n      updateConversations\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"t7yEt4K4Mz4MtqFqweLvlDK6lyM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","auth","googleProvider","signInWithPopup","signOut","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","conversations","setConversations","unsubscribe","onAuthStateChanged","signIn","error","console","logOut","getToken","getIdToken","updateConversations","newConversations","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexandredemoura/Desktop/dev/ai-chat-app/client/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { auth, googleProvider } from './firebase';\nimport { signInWithPopup, signOut } from 'firebase/auth';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    // Add this new state\n    const [conversations, setConversations] = useState([]);\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged((user) => {\n            setUser(user);\n            setLoading(false);\n            // Clear conversations when user logs out\n            if (!user) {\n                setConversations([]);\n            }\n        });\n\n        return () => unsubscribe();\n    }, []);\n\n    const signIn = async () => {\n        try {\n            await signInWithPopup(auth, googleProvider);\n        } catch (error) {\n            console.error(\"Error signing in with Google\", error);\n        }\n    };\n\n    const logOut = async () => {\n        try {\n            await signOut(auth);\n            // Clear conversations when user logs out\n            setConversations([]);\n        } catch (error) {\n            console.error(\"Error signing out\", error);\n        }\n    };\n\n    const getToken = async () => {\n        if (user) {\n            return await user.getIdToken();\n        }\n        return null;\n    };\n\n    // Add this new method\n    const updateConversations = (newConversations) => {\n        setConversations(newConversations);\n    };\n\n    return (\n        <AuthContext.Provider value={{\n            user,\n            signIn,\n            logOut,\n            getToken,\n            loading,\n            conversations,\n            updateConversations\n        }\n        }>\n            {children}\n        </AuthContext.Provider>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,IAAI,EAAEC,cAAc,QAAQ,YAAY;AACjD,SAASC,eAAe,EAAEC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,OAAO,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMU,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,MAAMiB,WAAW,GAAGhB,IAAI,CAACiB,kBAAkB,CAAEP,IAAI,IAAK;MAClDC,OAAO,CAACD,IAAI,CAAC;MACbG,UAAU,CAAC,KAAK,CAAC;MACjB;MACA,IAAI,CAACH,IAAI,EAAE;QACPK,gBAAgB,CAAC,EAAE,CAAC;MACxB;IACJ,CAAC,CAAC;IAEF,OAAO,MAAMC,WAAW,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,IAAI;MACA,MAAMhB,eAAe,CAACF,IAAI,EAAEC,cAAc,CAAC;IAC/C,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC;EAED,MAAME,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,IAAI;MACA,MAAMlB,OAAO,CAACH,IAAI,CAAC;MACnB;MACAe,gBAAgB,CAAC,EAAE,CAAC;IACxB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC7C;EACJ,CAAC;EAED,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAIZ,IAAI,EAAE;MACN,OAAO,MAAMA,IAAI,CAACa,UAAU,CAAC,CAAC;IAClC;IACA,OAAO,IAAI;EACf,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAIC,gBAAgB,IAAK;IAC9CV,gBAAgB,CAACU,gBAAgB,CAAC;EACtC,CAAC;EAED,oBACIpB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MACzBjB,IAAI;MACJQ,MAAM;MACNG,MAAM;MACNC,QAAQ;MACRV,OAAO;MACPE,aAAa;MACbU;IACJ,CACC;IAAAhB,QAAA,EACIA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACtB,EAAA,CAhEWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}